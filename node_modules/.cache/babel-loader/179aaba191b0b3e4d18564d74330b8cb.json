{"ast":null,"code":"// import React, { Component } from \"react\";\n// import \"../addToCart/customerDeatils.css\";\n// import Button from \"@material-ui/core/Button\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Radio from \"@material-ui/core/Radio\";\n// import RadioGroup from \"@material-ui/core/RadioGroup\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import \"../../../node_modules/bootstrap/dist/css/bootstrap-grid.min.css\";\n// var APICall = require(\"../../congfiguration/BookStoreCallAPI\");\n// class CustomerDetails extends Component {\n//   documentData;\n//   orderBook = [];\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       Name: \"\",\n//       Phone_Number: \"\",\n//       Pincode: \"\",\n//       Email: \"\",\n//       Address: \"\",\n//       Locality: \"\",\n//       city: \"\",\n//       LandMark: \"\",\n//       errors: {\n//         Name: \"\",\n//         Phone_Number: \"\",\n//         Pincode: \"\",\n//         Email: \"\",\n//         Address: \"\",\n//         Locality: \"\",\n//         city: \"\",\n//         LandMark: \"\"\n//       },\n//       formfilled: false,\n//       formHide: false,\n//       hidden: false,\n//       divHide: false,\n//       buttonHide: true,\n//       item: null,\n//       id: null\n//     };\n//     this.state.item = this.props.detail;\n//     this.state.formHide = this.props.formDetails;\n//   }\n//   formHide = () => {\n//     this.setState({ formHide: true });\n//   };\n//   editDetails = () => {\n//     this.setState((this.state = { formfilled: !this.state.formfilled }));\n//     this.setState((this.state = { buttonHide: !this.state.buttonHide }));\n//     this.setState((this.state = { hidden: !this.state.hidden }));\n//   };\n//   handleValueChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//     this.setState({ divHide: false });\n//     const { name, value } = event.target;\n//     let errors = this.state.errors;\n//     const phonenumber = RegExp(\"^[0-9]{10}$\");\n//     const pincode = RegExp(\"^[1-9][0-9]{5}$\");\n//     const email = RegExp(\n//       \"^[0-9a-zA-Z]+([-,_,+,.]{1}[0-9A-Za-z]+){0,1}@[0-9A-Za-z]+.[A-Za-z]{1,3}(.[a-zA-Z]{1,3}){0,1}$\"\n//     );\n//     switch (name) {\n//       case \"Name\":\n//         errors.Name =\n//           value.length < 2 ? \"Full Name must be 5 characters long!\" : \"\";\n//         break;\n//       case \"Phone_Number\":\n//         errors.Phone_Number = phonenumber.test(value)\n//           ? \"\"\n//           : \"Phone Number is not valid!\";\n//         break;\n//       case \"Pincode\":\n//         errors.Pincode = pincode.test(value) ? \"\" : \"Pin code is not valid!\";\n//         break;\n//       case \"Email\":\n//         errors.Email = email.test(value) ? \"\" : \"Email is not valid!\";\n//         break;\n//       case \"Address\":\n//         errors.Address = value.length < 5 ? \"Address is not valid!\" : \"\";\n//         break;\n//       case \"city\":\n//         errors.city = value.length < 3 ? \"city is not valid!\" : \"\";\n//         break;\n//       case \"Landmark\":\n//         errors.Landmark = value.length < 3 ? \"Landmark is not proper!\" : \"\";\n//         break;\n//       default:\n//         break;\n//     }\n//     this.setState({ errors, [name]: value }, () => {\n//       console.log(errors);\n//     });\n//     console.log(\n//       \"value of div hide in handleChangeValue function======================>\",\n//       this.state.divHide\n//     );\n//   };\n//   componentWillMount() {\n//     this.documentData = JSON.parse(localStorage.getItem(\"document\"));\n//     if (localStorage.getItem(\"document\")) {\n//       this.setState({\n//         Name: this.documentData.NAME,\n//         Phone_Number: this.documentData.MOBILENO,\n//         Pincode: this.documentData.PINCODE,\n//         Email: this.documentData.EMAil,\n//         Locality: this.documentData.LOCALITY,\n//         Address: this.documentData.ADDRESS,\n//         city: this.documentData.CITY,\n//         LandMark: this.documentData.LANDMARK\n//       });\n//     } else {\n//       this.setState({\n//         Name: \"\",\n//         Phone_Number: \"\",\n//         Pincode: \"\",\n//         Email: \"\",\n//         Locality: \"\",\n//         Address: \"\",\n//         city: \"\",\n//         LandMark: \"\"\n//       });\n//     }\n//   }\n//   onSubmit = event => {\n//     event.preventDefault();\n//     const validateForm = errors => {\n//       let valid = false;\n//       if (\n//         this.state.Name &&\n//         this.state.Phone_Number &&\n//         this.state.Pincode &&\n//         this.state.Email &&\n//         this.state.Address &&\n//         this.state.city &&\n//         this.state.LandMark &&\n//         this.state.Name.length > 2 &&\n//         this.state.Phone_Number.length > 9 &&\n//         this.state.Pincode.length > 5 &&\n//         this.state.Email.length > 3 &&\n//         this.state.Address.length > 3 &&\n//         this.state.city.length > 3 &&\n//         this.state.LandMark.length > 3\n//       ) {\n//         valid = true;\n//         this.setState({ divHide: false });\n//         Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n//         return valid;\n//       }\n//     };\n//     if (validateForm(this.state.errors)) {\n//       this.setState({ formfilled: !this.state.formfilled });\n//       this.setState({ buttonHide: !this.state.buttonHide });\n//       this.setState({ hidden: !this.state.hidden });\n//       this.setState({ divHide: true });\n//     } else {\n//       console.error(\"Invalid Form\");\n//     }\n//     var CustomerDetails = {\n//       NAME: this.state.Name,\n//       EMAil: this.state.Email,\n//       PINCODE: this.state.Pincode,\n//       MOBILENO: this.state.Phone_Number,\n//       ADDRESS: this.state.Address,\n//       LOCALITY: this.state.Locality,\n//       CITY: this.state.city,\n//       LANDMARK: this.state.LandMark,\n//       TYPE: this.state.TYPE\n//     };\n//     localStorage.setItem(\"document\", JSON.stringify(CustomerDetails));\n//   };\n//   onCheckout = async () => {\n//     const details = {\n//       NAME: this.state.Name,\n//       PHONE_NO: this.state.Phone_Number,\n//       PIN: this.state.Pincode,\n//       ADDRESS: this.state.Address,\n//       CITY_TOWN: this.state.city,\n//       EMAIL: this.state.Email,\n//       LANDMARK: this.state.LandMark,\n//       TYPE: this.state.Type\n//     };\n//     localStorage.clear();\n//     APICall.userDetails(details).then(res => {\n//       APICall.sendEmail({\n//         ID: res.data.data._id,\n//         EMAIL: res.data.data.EMAIL,\n//         Books: this.orderBook\n//       }).then(res => {});\n//       this.props.checkout({ID:res.data.data._id});\n//     });\n//   };\n//   render() {\n//     const { errors } = this.state;\n//     var Books = this.state.item.map((item, i) => {\n//       this.orderBook = item.Title + \" \";\n//       return (\n//         <div\n//           style={{ marginLeft: \"3%\", marginRight: \"10%\", marginTop: \"0.5%\" }}\n//         >\n//           <div\n//             className=\"divHide\"\n//             style={{ display: this.state.divHide ? \"true\" : \"false\" }}\n//           >\n//             <div>\n//               <div className=\"cart-image\">\n//                 <img\n//                   className=\"image\"\n//                   src={item.ImageURL}\n//                   style={{\n//                     height: \"80px\",\n//                     width: \"10%\",\n//                     marginTop: \"-1%\",\n//                     marginLeft: \"-3%\"\n//                   }}\n//                 ></img>\n//                 <div className=\"book-title\">\n//                   {item.Title}\n//                   <div className=\"book-author\">{item.Author}</div>\n//                   <div className=\"book-price\"> {item.Price}</div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       );\n//     });\n//     return (\n//       <div style={{ marginTop: \"3%\" }}>\n//         <div className=\"\">\n//           <div\n//             style={{\n//               borderStyle: \"groove\",\n//               marginLeft: \"17%\",\n//               marginRight: \"10%\",\n//               marginTop: \"-2%\",\n//               width: \"55%\"\n//             }}\n//           >\n//             <div className=\"orderSummary\">CustomerDetails</div>\n//             <div\n//               className=\"formHide\"\n//               style={{ display: this.state.formHide ? \"block\" : \"none\" }}\n//             >\n//               <form onSubmit={this.handleFormSubmit}>\n//                 <Button\n//                   className=\"editButton\"\n//                   component=\"span\"\n//                   style={{\n//                     display: this.state.hidden ? \"block\" : \"none\"\n//                   }}\n//                   onClick={this.editDetails}\n//                 >\n//                   Edit\n//                 </Button>\n//                 <div className=\"content\">\n//                   <div className=\"name\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Name\"\n//                       name=\"Name\"\n//                       required\n//                       variant=\"outlined\"\n//                       value={this.state.Name}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.Name.length > 0 && (\n//                       <span className=\"error\">{errors.Name}</span>\n//                     )}\n//                   </div>\n//                   <div className=\"phonenumber\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Phone Number\"\n//                       name=\"Phone_Number\"\n//                       variant=\"outlined\"\n//                       required\n//                       value={this.state.Phone_Number}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.Phone_Number.length > 0 && (\n//                       <span className=\"error\">{errors.Phone_Number}</span>\n//                     )}\n//                   </div>\n//                 </div>\n//                 <div className=\"content\">\n//                   <div className=\"name\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Pincode\"\n//                       variant=\"outlined\"\n//                       name=\"Pincode\"\n//                       value={this.state.Pincode}\n//                       required\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.Pincode.length > 0 && (\n//                       <span className=\"error\">{errors.Pincode}</span>\n//                     )}\n//                   </div>\n//                   <div className=\"phonenumber\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Email\"\n//                       variant=\"outlined\"\n//                       name=\"Email\"\n//                       value={this.state.Email}\n//                       variant=\"outlined\"\n//                       required\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.Email.length > 0 && (\n//                       <span className=\"error\">{errors.Email}</span>\n//                     )}\n//                   </div>\n//                 </div>\n//                 <div className=\"address\">\n//                   <TextField\n//                     id=\"outlined-multiline-static\"\n//                     style={{ width: \"68.7%\" }}\n//                     label=\"Address\"\n//                     name=\"Address\"\n//                     rows=\"3\"\n//                     required\n//                     value={this.state.Address}\n//                     onChange={event => this.handleValueChange(event)}\n//                     disabled={this.state.formfilled}\n//                     variant=\"outlined\"\n//                   />\n//                   {errors.Address.length > 0 && (\n//                     <span className=\"error\">{errors.Address}</span>\n//                   )}\n//                 </div>\n//                 <div className=\"content\">\n//                   <div className=\"name\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"city/town\"\n//                       name=\"city\"\n//                       variant=\"outlined\"\n//                       required\n//                       value={this.state.city}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.city.length > 0 && (\n//                       <span className=\"error\">{errors.city}</span>\n//                     )}\n//                   </div>\n//                   <div className=\"phonenumber\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Landmark\"\n//                       name=\"LandMark\"\n//                       required\n//                       variant=\"outlined\"\n//                       value={this.state.LandMark}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.LandMark.length > 0 && (\n//                       <span className=\"error\">{errors.LandMark}</span>\n//                     )}\n//                   </div>\n//                 </div>\n//                 <div\n//                   style={{\n//                     paddingLeft: \"4%\",\n//                     paddingBottom: \"1%\",\n//                     marginTop: \"1%\"\n//                   }}\n//                 >\n//                   Type\n//                 </div>\n//                 <FormControl component=\"fieldset\" style={{ paddingLeft: \"4%\" }}>\n//                   <RadioGroup aria-label=\"Type\" color=\"primary\" name=\"Type\" row>\n//                     <FormControlLabel\n//                       value=\"Home\"\n//                       onChange={event => this.handleValueChange(event)}\n//                       control={<Radio />}\n//                       disabled={this.state.formfilled}\n//                       label=\"Home\"\n//                     />\n//                     <FormControlLabel\n//                       value=\"Work\"\n//                       control={<Radio />}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                       label=\"Work\"\n//                     />\n//                     <FormControlLabel\n//                       value=\"Other\"\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                       control={<Radio />}\n//                       label=\"Other\"\n//                     />\n//                   </RadioGroup>\n//                 </FormControl>\n//                 <button\n//                   className=\"place-order\"\n//                   onClick={this.onSubmit}\n//                   style={{ display: this.state.buttonHide ? \"flase\" : \"true\" }}\n//                 >\n//                   PLACE ORDER{\" \"}\n//                 </button>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//         {this.state.divHide === true ? (\n//           <div>\n//             <div\n//               style={{\n//                 borderStyle: \"groove\",\n//                 marginLeft: \"17%\",\n//                 marginRight: \"10%\",\n//                 marginTop: \"2.9%\",\n//                 marginBottom: \"2%\",\n//                 width: \"55%\"\n//               }}\n//             >\n//               <div className=\"orderSummary\">Order Summary</div>\n//               {Books}\n//               <div className=\"total-price\">\n//                 <p id=\"totalprice\">Total Price: Rs.{this.props.totalAmount}</p>\n//               </div>\n//               <div style={{ display: this.state.divHide ? \"true\" : \"false\" }}>\n//                 <button\n//                   className=\"place-order\"\n//                   style={{ width: \"16%\", marginLeft: \"\", padding: \"1%\" }}\n//                   onClick={() => this.onCheckout()}\n//                 >\n//                   CHECKOUT{\" \"}\n//                 </button>{\" \"}\n//               </div>\n//             </div>\n//           </div>\n//         ) : (\n//           <div\n//             style={{\n//               borderStyle: \"groove\",\n//               marginLeft: \"17%\",\n//               marginRight: \"10%\",\n//               marginTop: \"1%\",\n//               marginBottom: \"3.9%\",\n//               width: \"55%\"\n//             }}\n//           >\n//             <div className=\"orderSummary\">Order Summary</div>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n// export default CustomerDetails;","map":{"version":3,"sources":["/home/admin1/Desktop/FinalProject/finaleBookUi/src/component/addToCart/customerDeatils.jsx"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\n// import \"../addToCart/customerDeatils.css\";\n// import Button from \"@material-ui/core/Button\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Radio from \"@material-ui/core/Radio\";\n// import RadioGroup from \"@material-ui/core/RadioGroup\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import \"../../../node_modules/bootstrap/dist/css/bootstrap-grid.min.css\";\n// var APICall = require(\"../../congfiguration/BookStoreCallAPI\");\n\n// class CustomerDetails extends Component {\n//   documentData;\n//   orderBook = [];\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       Name: \"\",\n//       Phone_Number: \"\",\n//       Pincode: \"\",\n//       Email: \"\",\n//       Address: \"\",\n//       Locality: \"\",\n//       city: \"\",\n//       LandMark: \"\",\n//       errors: {\n//         Name: \"\",\n//         Phone_Number: \"\",\n//         Pincode: \"\",\n//         Email: \"\",\n//         Address: \"\",\n//         Locality: \"\",\n//         city: \"\",\n//         LandMark: \"\"\n//       },\n//       formfilled: false,\n//       formHide: false,\n//       hidden: false,\n//       divHide: false,\n//       buttonHide: true,\n//       item: null,\n//       id: null\n//     };\n//     this.state.item = this.props.detail;\n//     this.state.formHide = this.props.formDetails;\n//   }\n\n//   formHide = () => {\n//     this.setState({ formHide: true });\n//   };\n\n//   editDetails = () => {\n//     this.setState((this.state = { formfilled: !this.state.formfilled }));\n//     this.setState((this.state = { buttonHide: !this.state.buttonHide }));\n//     this.setState((this.state = { hidden: !this.state.hidden }));\n//   };\n\n//   handleValueChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//     this.setState({ divHide: false });\n//     const { name, value } = event.target;\n//     let errors = this.state.errors;\n//     const phonenumber = RegExp(\"^[0-9]{10}$\");\n//     const pincode = RegExp(\"^[1-9][0-9]{5}$\");\n//     const email = RegExp(\n//       \"^[0-9a-zA-Z]+([-,_,+,.]{1}[0-9A-Za-z]+){0,1}@[0-9A-Za-z]+.[A-Za-z]{1,3}(.[a-zA-Z]{1,3}){0,1}$\"\n//     );\n\n//     switch (name) {\n//       case \"Name\":\n//         errors.Name =\n//           value.length < 2 ? \"Full Name must be 5 characters long!\" : \"\";\n//         break;\n//       case \"Phone_Number\":\n//         errors.Phone_Number = phonenumber.test(value)\n//           ? \"\"\n//           : \"Phone Number is not valid!\";\n//         break;\n//       case \"Pincode\":\n//         errors.Pincode = pincode.test(value) ? \"\" : \"Pin code is not valid!\";\n//         break;\n//       case \"Email\":\n//         errors.Email = email.test(value) ? \"\" : \"Email is not valid!\";\n//         break;\n//       case \"Address\":\n//         errors.Address = value.length < 5 ? \"Address is not valid!\" : \"\";\n//         break;\n//       case \"city\":\n//         errors.city = value.length < 3 ? \"city is not valid!\" : \"\";\n//         break;\n//       case \"Landmark\":\n//         errors.Landmark = value.length < 3 ? \"Landmark is not proper!\" : \"\";\n//         break;\n//       default:\n//         break;\n//     }\n\n//     this.setState({ errors, [name]: value }, () => {\n//       console.log(errors);\n//     });\n//     console.log(\n//       \"value of div hide in handleChangeValue function======================>\",\n//       this.state.divHide\n//     );\n//   };\n\n//   componentWillMount() {\n//     this.documentData = JSON.parse(localStorage.getItem(\"document\"));\n//     if (localStorage.getItem(\"document\")) {\n//       this.setState({\n//         Name: this.documentData.NAME,\n//         Phone_Number: this.documentData.MOBILENO,\n//         Pincode: this.documentData.PINCODE,\n//         Email: this.documentData.EMAil,\n//         Locality: this.documentData.LOCALITY,\n//         Address: this.documentData.ADDRESS,\n//         city: this.documentData.CITY,\n//         LandMark: this.documentData.LANDMARK\n//       });\n//     } else {\n//       this.setState({\n//         Name: \"\",\n//         Phone_Number: \"\",\n//         Pincode: \"\",\n//         Email: \"\",\n//         Locality: \"\",\n//         Address: \"\",\n//         city: \"\",\n//         LandMark: \"\"\n//       });\n//     }\n//   }\n\n//   onSubmit = event => {\n//     event.preventDefault();\n//     const validateForm = errors => {\n//       let valid = false;\n//       if (\n//         this.state.Name &&\n//         this.state.Phone_Number &&\n//         this.state.Pincode &&\n//         this.state.Email &&\n//         this.state.Address &&\n//         this.state.city &&\n//         this.state.LandMark &&\n//         this.state.Name.length > 2 &&\n//         this.state.Phone_Number.length > 9 &&\n//         this.state.Pincode.length > 5 &&\n//         this.state.Email.length > 3 &&\n//         this.state.Address.length > 3 &&\n//         this.state.city.length > 3 &&\n//         this.state.LandMark.length > 3\n//       ) {\n//         valid = true;\n//         this.setState({ divHide: false });\n\n//         Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n//         return valid;\n//       }\n//     };\n//     if (validateForm(this.state.errors)) {\n//       this.setState({ formfilled: !this.state.formfilled });\n//       this.setState({ buttonHide: !this.state.buttonHide });\n//       this.setState({ hidden: !this.state.hidden });\n//       this.setState({ divHide: true });\n//     } else {\n//       console.error(\"Invalid Form\");\n//     }\n//     var CustomerDetails = {\n//       NAME: this.state.Name,\n//       EMAil: this.state.Email,\n//       PINCODE: this.state.Pincode,\n//       MOBILENO: this.state.Phone_Number,\n//       ADDRESS: this.state.Address,\n//       LOCALITY: this.state.Locality,\n//       CITY: this.state.city,\n//       LANDMARK: this.state.LandMark,\n//       TYPE: this.state.TYPE\n//     };\n//     localStorage.setItem(\"document\", JSON.stringify(CustomerDetails));\n//   };\n\n//   onCheckout = async () => {\n//     const details = {\n//       NAME: this.state.Name,\n//       PHONE_NO: this.state.Phone_Number,\n//       PIN: this.state.Pincode,\n//       ADDRESS: this.state.Address,\n//       CITY_TOWN: this.state.city,\n//       EMAIL: this.state.Email,\n//       LANDMARK: this.state.LandMark,\n//       TYPE: this.state.Type\n//     };\n//     localStorage.clear();\n//     APICall.userDetails(details).then(res => {\n//       APICall.sendEmail({\n//         ID: res.data.data._id,\n//         EMAIL: res.data.data.EMAIL,\n//         Books: this.orderBook\n//       }).then(res => {});\n//       this.props.checkout({ID:res.data.data._id});\n\n//     });\n//   };\n\n//   render() {\n//     const { errors } = this.state;\n//     var Books = this.state.item.map((item, i) => {\n//       this.orderBook = item.Title + \" \";\n//       return (\n//         <div\n//           style={{ marginLeft: \"3%\", marginRight: \"10%\", marginTop: \"0.5%\" }}\n//         >\n//           <div\n//             className=\"divHide\"\n//             style={{ display: this.state.divHide ? \"true\" : \"false\" }}\n//           >\n//             <div>\n//               <div className=\"cart-image\">\n//                 <img\n//                   className=\"image\"\n//                   src={item.ImageURL}\n//                   style={{\n//                     height: \"80px\",\n//                     width: \"10%\",\n//                     marginTop: \"-1%\",\n//                     marginLeft: \"-3%\"\n//                   }}\n//                 ></img>\n//                 <div className=\"book-title\">\n//                   {item.Title}\n//                   <div className=\"book-author\">{item.Author}</div>\n//                   <div className=\"book-price\"> {item.Price}</div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       );\n//     });\n//     return (\n//       <div style={{ marginTop: \"3%\" }}>\n//         <div className=\"\">\n//           <div\n//             style={{\n//               borderStyle: \"groove\",\n//               marginLeft: \"17%\",\n//               marginRight: \"10%\",\n//               marginTop: \"-2%\",\n//               width: \"55%\"\n//             }}\n//           >\n//             <div className=\"orderSummary\">CustomerDetails</div>\n//             <div\n//               className=\"formHide\"\n//               style={{ display: this.state.formHide ? \"block\" : \"none\" }}\n//             >\n//               <form onSubmit={this.handleFormSubmit}>\n//                 <Button\n//                   className=\"editButton\"\n//                   component=\"span\"\n//                   style={{\n//                     display: this.state.hidden ? \"block\" : \"none\"\n//                   }}\n//                   onClick={this.editDetails}\n//                 >\n//                   Edit\n//                 </Button>\n\n//                 <div className=\"content\">\n//                   <div className=\"name\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Name\"\n//                       name=\"Name\"\n//                       required\n//                       variant=\"outlined\"\n//                       value={this.state.Name}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.Name.length > 0 && (\n//                       <span className=\"error\">{errors.Name}</span>\n//                     )}\n//                   </div>\n//                   <div className=\"phonenumber\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Phone Number\"\n//                       name=\"Phone_Number\"\n//                       variant=\"outlined\"\n//                       required\n//                       value={this.state.Phone_Number}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.Phone_Number.length > 0 && (\n//                       <span className=\"error\">{errors.Phone_Number}</span>\n//                     )}\n//                   </div>\n//                 </div>\n//                 <div className=\"content\">\n//                   <div className=\"name\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Pincode\"\n//                       variant=\"outlined\"\n//                       name=\"Pincode\"\n//                       value={this.state.Pincode}\n//                       required\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.Pincode.length > 0 && (\n//                       <span className=\"error\">{errors.Pincode}</span>\n//                     )}\n//                   </div>\n//                   <div className=\"phonenumber\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Email\"\n//                       variant=\"outlined\"\n//                       name=\"Email\"\n//                       value={this.state.Email}\n//                       variant=\"outlined\"\n//                       required\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.Email.length > 0 && (\n//                       <span className=\"error\">{errors.Email}</span>\n//                     )}\n//                   </div>\n//                 </div>\n//                 <div className=\"address\">\n//                   <TextField\n//                     id=\"outlined-multiline-static\"\n//                     style={{ width: \"68.7%\" }}\n//                     label=\"Address\"\n//                     name=\"Address\"\n//                     rows=\"3\"\n//                     required\n//                     value={this.state.Address}\n//                     onChange={event => this.handleValueChange(event)}\n//                     disabled={this.state.formfilled}\n//                     variant=\"outlined\"\n//                   />\n//                   {errors.Address.length > 0 && (\n//                     <span className=\"error\">{errors.Address}</span>\n//                   )}\n//                 </div>\n//                 <div className=\"content\">\n//                   <div className=\"name\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"city/town\"\n//                       name=\"city\"\n//                       variant=\"outlined\"\n//                       required\n//                       value={this.state.city}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.city.length > 0 && (\n//                       <span className=\"error\">{errors.city}</span>\n//                     )}\n//                   </div>\n//                   <div className=\"phonenumber\">\n//                     <TextField\n//                       id=\"outlined-basic\"\n//                       className=\"textField\"\n//                       label=\"Landmark\"\n//                       name=\"LandMark\"\n//                       required\n//                       variant=\"outlined\"\n//                       value={this.state.LandMark}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                     />\n//                     {errors.LandMark.length > 0 && (\n//                       <span className=\"error\">{errors.LandMark}</span>\n//                     )}\n//                   </div>\n//                 </div>\n//                 <div\n//                   style={{\n//                     paddingLeft: \"4%\",\n//                     paddingBottom: \"1%\",\n//                     marginTop: \"1%\"\n//                   }}\n//                 >\n//                   Type\n//                 </div>\n//                 <FormControl component=\"fieldset\" style={{ paddingLeft: \"4%\" }}>\n//                   <RadioGroup aria-label=\"Type\" color=\"primary\" name=\"Type\" row>\n//                     <FormControlLabel\n//                       value=\"Home\"\n//                       onChange={event => this.handleValueChange(event)}\n//                       control={<Radio />}\n//                       disabled={this.state.formfilled}\n//                       label=\"Home\"\n//                     />\n\n//                     <FormControlLabel\n//                       value=\"Work\"\n//                       control={<Radio />}\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                       label=\"Work\"\n//                     />\n\n//                     <FormControlLabel\n//                       value=\"Other\"\n//                       onChange={event => this.handleValueChange(event)}\n//                       disabled={this.state.formfilled}\n//                       control={<Radio />}\n//                       label=\"Other\"\n//                     />\n//                   </RadioGroup>\n//                 </FormControl>\n//                 <button\n//                   className=\"place-order\"\n//                   onClick={this.onSubmit}\n//                   style={{ display: this.state.buttonHide ? \"flase\" : \"true\" }}\n//                 >\n//                   PLACE ORDER{\" \"}\n//                 </button>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//         {this.state.divHide === true ? (\n//           <div>\n//             <div\n//               style={{\n//                 borderStyle: \"groove\",\n//                 marginLeft: \"17%\",\n//                 marginRight: \"10%\",\n//                 marginTop: \"2.9%\",\n//                 marginBottom: \"2%\",\n//                 width: \"55%\"\n//               }}\n//             >\n//               <div className=\"orderSummary\">Order Summary</div>\n//               {Books}\n//               <div className=\"total-price\">\n//                 <p id=\"totalprice\">Total Price: Rs.{this.props.totalAmount}</p>\n//               </div>\n//               <div style={{ display: this.state.divHide ? \"true\" : \"false\" }}>\n//                 <button\n//                   className=\"place-order\"\n//                   style={{ width: \"16%\", marginLeft: \"\", padding: \"1%\" }}\n//                   onClick={() => this.onCheckout()}\n//                 >\n//                   CHECKOUT{\" \"}\n//                 </button>{\" \"}\n//               </div>\n//             </div>\n//           </div>\n//         ) : (\n//           <div\n//             style={{\n//               borderStyle: \"groove\",\n//               marginLeft: \"17%\",\n//               marginRight: \"10%\",\n//               marginTop: \"1%\",\n//               marginBottom: \"3.9%\",\n//               width: \"55%\"\n//             }}\n//           >\n//             <div className=\"orderSummary\">Order Summary</div>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n// export default CustomerDetails;\n\n"]},"metadata":{},"sourceType":"module"}